// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OptiLogic_API.Model;

#nullable disable

namespace OptiLogic_API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("OptiLogic_API.Model.Car", b =>
                {
                    b.Property<int>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("car_id");

                    b.Property<float>("Confidence")
                        .HasColumnType("real")
                        .HasColumnName("confidence");

                    b.Property<float>("Height")
                        .HasColumnType("real")
                        .HasColumnName("height");

                    b.Property<int>("ParkingLotId")
                        .HasColumnType("int")
                        .HasColumnName("parking_lot_id");

                    b.Property<float>("Width")
                        .HasColumnType("real")
                        .HasColumnName("width");

                    b.Property<float>("XAxis")
                        .HasColumnType("real")
                        .HasColumnName("x_axis");

                    b.Property<float>("YAxis")
                        .HasColumnType("real")
                        .HasColumnName("y_axis");

                    b.HasKey("CarId");

                    b.HasIndex("ParkingLotId");

                    b.ToTable("Car");
                });

            modelBuilder.Entity("OptiLogic_API.Model.ParkingLot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pl_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("pl_name");

                    b.HasKey("Id");

                    b.ToTable("Parking_Lot");
                });

            modelBuilder.Entity("OptiLogic_API.Model.ParkingSpot", b =>
                {
                    b.Property<int>("ParkingSpotID")
                        .HasColumnType("int")
                        .HasColumnName("parking_spot_id");

                    b.Property<int?>("CarId")
                        .HasColumnType("int")
                        .HasColumnName("car_id");

                    b.Property<float>("Height")
                        .HasColumnType("real")
                        .HasColumnName("height");

                    b.Property<bool>("Occupied")
                        .HasColumnType("bit")
                        .HasColumnName("occupied");

                    b.Property<int>("ParkingLotId")
                        .HasColumnType("int")
                        .HasColumnName("parking_lot_id");

                    b.Property<float>("Width")
                        .HasColumnType("real")
                        .HasColumnName("width");

                    b.Property<float>("XAxis")
                        .HasColumnType("real")
                        .HasColumnName("x_axis");

                    b.Property<float>("YAxis")
                        .HasColumnType("real")
                        .HasColumnName("y_axis");

                    b.HasKey("ParkingSpotID");

                    b.HasIndex("ParkingLotId");

                    b.ToTable("Parking_Spot");
                });

            modelBuilder.Entity("OptiLogic_API.Model.Car", b =>
                {
                    b.HasOne("OptiLogic_API.Model.ParkingLot", null)
                        .WithMany("Cars")
                        .HasForeignKey("ParkingLotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OptiLogic_API.Model.ParkingSpot", b =>
                {
                    b.HasOne("OptiLogic_API.Model.ParkingLot", null)
                        .WithMany("ParkingSpots")
                        .HasForeignKey("ParkingLotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OptiLogic_API.Model.ParkingLot", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("ParkingSpots");
                });
#pragma warning restore 612, 618
        }
    }
}
